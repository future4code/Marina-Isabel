{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Livia\\\\Marina-Isabel\\\\semana8\\\\integracao\\\\src\\\\Components\\\\TelaLista.js\";\nimport React from 'react';\nimport TelaCadastro from './TelaCadastro';\nimport App from '../App';\nimport axios from 'axios';\nimport ItemDeListaUsuario from './ItemDeListaUsuario';\nconst baseUrl = \"https://us-central1-future4-users.cloudfunctions.net/api\"; // Mock de usuário para pegar no postman\n\nconst listaDeUsuarios = [{\n  id: '1',\n  name: \"Marina\"\n}, {\n  id: '2',\n  name: \"Maria\"\n}];\n\nclass TelaLista extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.apagarUsuario = idDoUsuario => {\n      const promessaApagarUsuario = axios.delete(`${baseUrl}/users/deleUsers?id`, {\n        headers: {\n          'api-token': \"Marina Isabel\"\n        }\n      });\n      promessaApagarUsuario.then(response => {\n        alert(\"Usuario apagado com sucesso\");\n        this.buscarListaDeUsuario();\n      }).catch(error => {\n        alert(\"Erro ao apagar o usuário\");\n        console.log(error.response.data.message);\n      });\n    };\n\n    this.state = {\n      listaDeUsuarios: []\n    };\n  }\n\n  componentDidMount() {\n    const listaDeUsuariosPromessa = axios.get(`${baseUrl}/users/getAllUsers`, {\n      headers: {\n        'api-token': \"Marina Isabel\"\n      }\n    }); //Para fazer a atualização da lista de usuários.\n\n    listaDeUsuariosPromessa.then(response => {\n      const listaDeUsuarios = response.data.result;\n      this.setState({\n        listaDeUsuarios: listaDeUsuarios\n      });\n    }).catch(error => {\n      alert(\"Não foi possivel achar a lista de usuários\");\n      this.setState({\n        listaDeUsuarios: []\n      });\n    });\n  }\n\n  render() {\n    //Lista de usuários sendo cadastrados e X para apagar usuários cadastrados.\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.state.listaDeUsuarios.map(usuario => React.createElement(ItemDeListaUsuario, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, usuario.name, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"X\"))));\n  }\n\n}\n\nexport default TelaLista;","map":{"version":3,"sources":["C:/Users/Livia/Marina-Isabel/semana8/integracao/src/Components/TelaLista.js"],"names":["React","TelaCadastro","App","axios","ItemDeListaUsuario","baseUrl","listaDeUsuarios","id","name","TelaLista","Component","constructor","props","apagarUsuario","idDoUsuario","promessaApagarUsuario","delete","headers","then","response","alert","buscarListaDeUsuario","catch","error","console","log","data","message","state","componentDidMount","listaDeUsuariosPromessa","get","result","setState","render","map","usuario"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAGA,MAAMC,OAAO,GAAG,0DAAhB,C,CAEA;;AACA,MAAMC,eAAe,GAAG,CACpB;AACIC,EAAAA,EAAE,EAAE,GADR;AAEIC,EAAAA,IAAI,EAAE;AAFV,CADoB,EAKpB;AACID,EAAAA,EAAE,EAAC,GADP;AAEIC,EAAAA,IAAI,EAAE;AAFV,CALoB,CAAxB;;AAYA,MAAMC,SAAN,SAAwBT,KAAK,CAACU,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SA0BlBC,aA1BkB,GA0BFC,WAAD,IAAiB;AAC5B,YAAMC,qBAAqB,GAAGZ,KAAK,CAACa,MAAN,CAAc,GAAEX,OAAQ,qBAAxB,EAA8C;AAC5EY,QAAAA,OAAO,EAAE;AACL,uBAAc;AADT;AADmE,OAA9C,CAA9B;AAMAF,MAAAA,qBAAqB,CAACG,IAAtB,CAA4BC,QAAD,IAAc;AACrCC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AACA,aAAKC,oBAAL;AACH,OAHD,EAGGC,KAHH,CAGUC,KAAD,IAAU;AACfH,QAAAA,KAAK,CAAC,0BAAD,CAAL;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACJ,QAAN,CAAeO,IAAf,CAAoBC,OAAhC;AACH,OAND;AAOH,KAxCiB;;AAEd,SAAKC,KAAL,GAAY;AACRtB,MAAAA,eAAe,EAAE;AADT,KAAZ;AAGH;;AAEDuB,EAAAA,iBAAiB,GAAE;AACf,UAAMC,uBAAuB,GAAG3B,KAAK,CAAC4B,GAAN,CAAW,GAAE1B,OAAQ,oBAArB,EAAyC;AACzEY,MAAAA,OAAO,EAAE;AACL,qBAAa;AADR;AADgE,KAAzC,CAAhC,CADe,CAOnB;;AAEAa,IAAAA,uBAAuB,CAACZ,IAAxB,CAA6BC,QAAQ,IAAI;AACrC,YAAMb,eAAe,GAAGa,QAAQ,CAACO,IAAT,CAAcM,MAAtC;AACA,WAAKC,QAAL,CAAc;AAAE3B,QAAAA,eAAe,EAAEA;AAAnB,OAAd;AACH,KAHD,EAGGgB,KAHH,CAGSC,KAAK,IAAI;AACdH,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACA,WAAKa,QAAL,CAAc;AAAE3B,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACH,KAND;AAQC;;AAmBD4B,EAAAA,MAAM,GAAG;AACL;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKN,KAAL,CAAWtB,eAAX,CAA2B6B,GAA3B,CAA+BC,OAAO,IACpC,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBA,OAAO,CAAC5B,IAA7B,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,CADF,CADF,CADJ;AASH;;AAvDmC;;AA2DxC,eAAeC,SAAf","sourcesContent":["import React from 'react'\r\nimport TelaCadastro from './TelaCadastro'\r\nimport App from '../App';\r\nimport axios from 'axios'\r\nimport ItemDeListaUsuario from './ItemDeListaUsuario';\r\n\r\n\r\nconst baseUrl = \"https://us-central1-future4-users.cloudfunctions.net/api\";\r\n\r\n// Mock de usuário para pegar no postman\r\nconst listaDeUsuarios = [\r\n    {\r\n        id: '1',\r\n        name: \"Marina\",\r\n    },\r\n    {\r\n        id:'2',\r\n        name: \"Maria\"\r\n    }\r\n]\r\n\r\n\r\nclass TelaLista extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            listaDeUsuarios: [],\r\n        };\r\n    }\r\n  \r\n    componentDidMount(){\r\n        const listaDeUsuariosPromessa = axios.get(`${baseUrl}/users/getAllUsers`,{\r\n        headers: {\r\n            'api-token': \"Marina Isabel\",\r\n        }\r\n    })\r\n     \r\n    //Para fazer a atualização da lista de usuários.\r\n\r\n    listaDeUsuariosPromessa.then(response => {\r\n        const listaDeUsuarios = response.data.result;\r\n        this.setState({ listaDeUsuarios: listaDeUsuarios})\r\n    }).catch(error => {\r\n        alert(\"Não foi possivel achar a lista de usuários\");\r\n        this.setState({ listaDeUsuarios: [] })\r\n    })\r\n\r\n    }\r\n\r\n    apagarUsuario =(idDoUsuario) => {\r\n        const promessaApagarUsuario = axios.delete(`${baseUrl}/users/deleUsers?id`, {\r\n        headers: {\r\n            'api-token' : \"Marina Isabel\",\r\n        }\r\n    })\r\n\r\n        promessaApagarUsuario.then((response) => {\r\n            alert(\"Usuario apagado com sucesso\");\r\n            this.buscarListaDeUsuario();\r\n        }).catch((error) =>{\r\n            alert(\"Erro ao apagar o usuário\");\r\n            console.log(error.response.data.message);\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n        //Lista de usuários sendo cadastrados e X para apagar usuários cadastrados.\r\n        return(\r\n            <ul>\r\n            { this.state.listaDeUsuarios.map(usuario => (\r\n                <ItemDeListaUsuario>{usuario.name} \r\n                <span>X</span>\r\n                </ItemDeListaUsuario>\r\n            ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TelaLista;"]},"metadata":{},"sourceType":"module"}